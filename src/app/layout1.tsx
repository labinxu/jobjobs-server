import type { Metadata } from "next";
import localFont from "next/font/local";
import { auth } from "@/auth";
import "./globals.css";
import {
  SidebarInset,
  SidebarProvider,
  SidebarTrigger,
} from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/app-sidebar";
import { Separator } from "@/components/ui/separator";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";
import { ScrollArea } from "@/components/ui/scroll-area";
import ThemeProviderWrap from "@/components/theme-providers";
import { SessionProvider } from "next-auth/react";
import { NextIntlClientProvider } from "next-intl";
import Navbar from "@/components/nav-bar";
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Price App",
  description: "Generated by X-CC studio",
};

const HEADER_HEIGHT = "4rem";
interface RootLayoutProps {
  children: React.ReactNode;
}

export default async function RootLayout({
  children,
}: Readonly<RootLayoutProps>) {
  let session = null;
  try {
    session = await auth();
  } catch (err) {
    console.log(err);
  }
  return (
    <html suppressHydrationWarning>
      <SessionProvider session={session}>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased overflow-hidden`}
          style={
            {
              "--header-height": HEADER_HEIGHT,
            } as React.CSSProperties
          }
        >
          <NextIntlClientProvider>
            <ThemeProviderWrap>
              <header className="flex h-[--header-height] shrink-0 items-center gap-2 border-b px-4">
                <Navbar />
              </header>
              <SidebarProvider>
                <AppSidebar />
                <SidebarInset className="h-full peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4)-var(--header-height))]">
                  <header className="flex h-16 shrink-0 items-center gap-2 border-b px-4">
                    <SidebarTrigger className="-ml-1" />
                    <Separator orientation="vertical" className="mr-2 h-4" />
                    <Breadcrumb>
                      <BreadcrumbList>
                        <BreadcrumbItem className="hidden md:block">
                          <BreadcrumbLink href="#">
                            Building Your Application
                          </BreadcrumbLink>
                        </BreadcrumbItem>
                        <BreadcrumbSeparator className="hidden md:block" />
                        <BreadcrumbItem>
                          <BreadcrumbPage>Data Fetching</BreadcrumbPage>
                        </BreadcrumbItem>
                      </BreadcrumbList>
                    </Breadcrumb>
                  </header>
                  <main>
                    <ScrollArea>{children}</ScrollArea>
                  </main>
                </SidebarInset>
              </SidebarProvider>
            </ThemeProviderWrap>
          </NextIntlClientProvider>
        </body>
      </SessionProvider>
    </html>
  );
}
